races:
- human (+3 all atributes)
- elf (+4 to agility and magic, +10 to mana)
- dwarf (+4 to strength and health, +15 to life)
- orc (+5 to strength, +3 to health, +5 to attack)
- hobbit (+5 to agility, +1% to critical and evade, +5% to hide)
- construct (+5 to health, +3 to strength, 1/sec life regen)
- djinn (+5 to magic, +3 to agility, 1/10 sec mana regen)
- vampire (1/sec life regen, +5% to hide, +5 to defense)

classes: (give a predefined set of skills, define attributes: 1 primary, 1 secondary, 2 tertiary)
- warrior (hp max: 4945, mana max: 2109)
	- str: 20(4), agi: 10(2), hel: 15(3), mag: 10(2)
- rogue (hp max: 3960, mana max: 2109)
	- str: 15(3), agi: 20(4), hel: 10(2), mag: 10(2)
- mage (hp max: 3960, mana max: 4208)
	- str: 10(2), agi: 15(3), hel: 10(2), mag: 20(4)
- cleric (hp max: 5930, mana max: 3158)
	- str: 10(2), agi: 10(2), hel: 20(4), mag: 15(3)
- monster (only enemy)

attributes:
- strength (damage, defense)
- agility (critical, evade)
- health (life, defense)
- magic (mana, skill power)

skills: (divided in passive and active, active ones have levels 1->10)
- crush [active leveled]
  	- damage: 10 + 1.(crush level) * atack
	- mana: 5 * crush level
- critical strike [active leveled]
  	- damage: adds cs level * 5 to attack and critical
	- mana: 5 * cs level
- fireball [active leveled] (lv1 mage -> 16 - 22, lv99 mage -> 618 - 824)
	- damage: 1.(fireball level) * (random between magic*0.75 and magic)
	- mana: 5 * fireball level
- heal [active leveled] (lv1 cleric -> 12 - 16, lv99 cleric -> 463 - 618)
	- heals: 1.(heal level) * (random between magic*0.75 and magic)
	- mana: 5 * heal level
- atack up [passive] (lv1 warrior -> 7 - 11, lv99 warrior -> 253 - 305)
  	- adds level to atack
- sneak [passive]
  	- adds level/2 to hide%
- magic up [passive]
  	- adds level to magic
- vitality [passive]
	- adds level * 3 to life
...

player:
- name
- race
- class
- attributes
- skills
- exp
- life
	- initial -> 20 + (2 * health)
	- levelup -> 15 * health-inc
- current life
- mana
	- initial -> 2 * magic
	- levelup -> 2 * magic-inc
- current mana
- attack (lv1 warrior -> 6 - 10, lv99 warrior -> 154 - 206) (lv1 mage -> 3 - 5, lv99 mage -> 77 - 103)
	- random between strength/3 and strength/2
- defense (lv1 warrior -> 3, lv99 warrior -> 72) (lv1 mage -> 2, lv99 mage -> 41)
	- (strength + health) / 10
- critical (lv1 warrior -> 0.8%, lv99 warrior -> 16.5%) (lv1 rogue -> 1.6%, lv99 rogue -> 33%)
	- agility * 0.08
- evade (lv1 warrior -> 0.6%, lv99 warrior -> 12.3%) (lv1 rogue -> 1.2%, lv99 rogue -> 24.7%)
	- agility * 0.06
- life regen (level/5 secs)
- mana regen (level/20 secs)
- hide (default 0)
- level (1 to 99)
- equipment
	- name, description, type [weapon, shield, armor, ring], 
	  kind [sword, axe, heavy armor, light armor, etc], 
	  prefix, suffix, level, effect
- bag (holds 20 items)
- effects

enemy:
- name
- class (monster)
- attributes
- skills
- life
- current life
- mana
- current mana
- attack
- defense
- critical
- evade
- level

effects: (granted by items (temp or not), equipment, race, skills)
- +/- strength
- +/- agility
- +/- health
- +/- magic
- +/- attack
- +/- defense
- +/- critical
- +/- evade
- +/- life
- +/- mana
- +/- life regen
- +/- mana regen
- +/- hide
- grant skill
- expiration (nil or some date)

prefix/suffix:
- name
- type (suffix, prefix)
- effect

skill:
- name
- description
- only-in-battle (true or false)
- active (true or false)
- level (only used in active ones)
- target (self, enemy, both [only used in active skills])

weapons:
- swords
    - give attack and agility
- axes
    - give attack and strength
- maces
    - give attack and health
- staffs
    - give attack and magic
- spears
    - give attack and defense
- daggers
    - give attack and critical
- bows
    - give attack and evade

armors:
- give defense

shields:
- give defense and evade

rings:
- give any effect

# calculate health
(defn calc-hp [init-health health-inc level]
      (loop [att init-health, life (+ 20 (* init-health 2)), l 1]
      	    (if (< l level)
	    	(recur (+ att health-inc) (+ life 20 (* health-inc 10)) (inc l))
		{:att att, :life (double life), :level l})))

# calculate mana
(defn calc-mana [init-magic magic-inc level]
      (loop [att init-magic, sp (* 2 init-magic), l 1]
      	    (if (< l level)
	    	(recur (+ att magic-inc) (+ sp (* 2 magic-inc)) (inc l))
		{:att att, :sp (double sp), :level l})))
